# Generated by Django 4.1.1 on 2023-02-07 11:49

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(db_index=True, help_text='Enter your username', max_length=20, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(help_text='Enter your name', max_length=20, null=True, verbose_name='First name')),
                ('last_name', models.CharField(help_text='Enter your surname', max_length=20, verbose_name='Last name')),
                ('email', models.EmailField(help_text='Enter your email', max_length=254, unique=True, verbose_name='Email:')),
                ('sex', models.CharField(choices=[('Female', 'Female'), ('Male', 'Male')], max_length=6, null=True, verbose_name='Sex')),
                ('password', models.CharField(help_text='Enter your password', max_length=126, verbose_name='Password:')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Superuser')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
